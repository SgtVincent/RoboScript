[
    {
        "query": "# objects = [table, cabinet, apple, banana, white_ceramic_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  place all fruits on the table into the white plate.",
        "code": "# Detailed planning:\n# Step 1: Detect all fruits on the table\n# Step 2: Grasp each fruit and place it into the white plate\n# Step 3: Release each fruit\n\n# Detect all fruits on the table\nfruits = ['apple', 'banana']\nfruits_on_table = []\nfor fruit in fruits:\n    if fruit in get_obj_name_list():\n        fruits_on_table.append(fruit)\n\n# Grasp each fruit and place it into the white plate\nfor fruit in fruits_on_table:\n    # Grasp the fruit\n    grasp_pose = parse_grasp_pose(object_name=fruit)\n    grasp(grasp_pose)\n    close_gripper()\n    attach_object(fruit)\n\n    # Move the fruit into the white plate\n    place_pose = parse_place_pose(object_name=fruit, receptacle_name='white_ceramic_plate')\n    move_to_pose(place_pose)\n\n    # Release the fruit\n    open_gripper()\n    detach_object(fruit)"
    },
    {
        "query": "# objects = [table, cabinet, apple, banana, white_ceramic_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  place all standing bottles into the table into the white plate.",
        "code": "# Detailed planning:\n# Step 1: Detect all standing bottles on the table\n# Step 2: Grasp each standing bottle one by one\n# Step 3: Move each bottle to the white plate\n# Step 4: Release each bottle into the white plate\n\n# Detect all standing bottles on the table\nbottles = []\nobjects = get_obj_name_list()\nfor obj in objects:\n    if 'bottle' in obj and 'standing' in obj:\n        bottles.append(obj)\n\n# Grasp each standing bottle one by one and move it to the white plate\nfor bottle in bottles:\n    # Grasp the bottle\n    grasp_pose = parse_grasp_pose(object_name=bottle)\n    open_gripper()\n    grasp(grasp_pose)\n    close_gripper()\n    attach_object(bottle)\n\n    # Move the bottle to the white plate\n    place_pose = parse_place_pose(object_name=bottle, receptacle_name='white_ceramic_plate')\n    move_to_pose(place_pose)\n\n    # Release the bottle into the white plate\n    open_gripper()\n    detach_object(bottle)"
    },
    {
        "query": "# objects = [table, cabinet, apple, banana, white_ceramic_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, cabinet.drawer0, cabinet.drawer1, cabinet.drawer2, cabinet.handle_0, cabinet.handle_1, cabinet.handle_2] ;  open the second top cabinet drawer and place all boxes into it .",
        "code": "def move_in_direction(direction, distance=0.2):\n    current_pose = get_gripper_pose()\n    target_pose = Pose()\n    target_pose.position.x = current_pose.position.x + direction[0] * distance\n    target_pose.position.y = current_pose.position.y + direction[1] * distance\n    target_pose.position.z = current_pose.position.z + direction[2] * distance\n    target_pose.orientation = current_pose.orientation\n    move_to_pose(target_pose)\n# Detailed planning:\n# Step 1: Grasp the handle of the second top cabinet drawer\n# Step 2: Pull the handle of the second top cabinet drawer, move in +x direction\n# Step 3: Release the handle of the second top cabinet drawer\n# Step 4: Grasp each box and place it into the second top cabinet drawer\n# Step 5: Release each box\n\n# Grasp the handle of the second top cabinet drawer\nopen_gripper()\ngrasp_pose = parse_grasp_pose(object_name='cabinet.handle_1')\ngrasp(grasp_pose)\nclose_gripper()\nattach_object('cabinet.handle_1')\n\n# Pull the handle of the second top cabinet drawer, move in +x direction\ndirection = [1, 0, 0] # (x, y, z)\nmove_in_direction(direction, distance=0.2)\n\n# Release the handle of the second top cabinet drawer\nopen_gripper()\ndetach_object('cabinet.handle_1')\n\n# Grasp each box and place it into the second top cabinet drawer\nboxes = ['white_and_pink_box', 'brown_box']\nfor box in boxes:\n    # Grasp the box\n    grasp_pose = parse_grasp_pose(object_name=box)\n    grasp(grasp_pose)\n    close_gripper()\n    attach_object(box)\n\n    # Move the box into the second top cabinet drawer\n    place_pose = parse_place_pose(object_name=box, receptacle_name='cabinet.drawer1')\n    move_to_pose(place_pose)\n\n    # Release the box\n    open_gripper()\n    detach_object(box)\n\n# Verify if all boxes are placed in the second top cabinet drawer\nrospy.sleep(5)\ndetect_objects()\n\n# Note: The remaining objects in the list are not boxes, so they will not be placed in the cabinet drawer."
    },
    {
        "query": "# objects = [table, cabinet, apple, banana, white_ceramic_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  stand up lying bottles and mugs on the table.",
        "code": "# Detailed planning:\n# Step 1: Stand up the bottles and mugs on the table\n\n# Stand up the bottles and mugs on the table\nobjects_to_stand = ['brown_medication_bottle', 'bleach_cleanser', 'mustard_bottle']\nfor obj in objects_to_stand:\n    obj_pose = parse_grasp_pose(object_name=obj)\n    obj_pose.position.z += 0.1  # Adjust the z-coordinate to stand up the object\n    move_to_pose(obj_pose)\n\n# Note: The objects 'apple', 'banana', 'white_ceramic_plate', 'white_and_pink_box', 'brown_box', and 'red_plastic_bowl' are not bottles or mugs, so they will not be stood up."
    },
    {
        "query": "# objects = [table, cabinet, apple, banana, white_ceramic_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  exchange the position of the apple and the banana on the table.",
        "code": "# Detailed planning:\n# Step 1: Grasp the apple on the table\n# Step 2: Move the apple to a temporary location\n# Step 3: Grasp the banana on the table\n# Step 4: Move the banana to the original position of the apple\n# Step 5: Grasp the apple from the temporary location\n# Step 6: Move the apple to the original position of the banana\n# Step 7: Release the apple and the banana\n\n# Grasp the apple on the table\napple_grasp_pose = parse_grasp_pose(object_name='apple')\nopen_gripper()\ngrasp(apple_grasp_pose)\nclose_gripper()\nattach_object('apple')\n\n# Move the apple to a temporary location\ntemp_pose = parse_place_pose(object_name='apple', position=[0.5, 0.5, 0.5])\nmove_to_pose(temp_pose)\n\n# Grasp the banana on the table\nbanana_grasp_pose = parse_grasp_pose(object_name='banana')\ngrasp(banana_grasp_pose)\nclose_gripper()\nattach_object('banana')\n\n# Move the banana to the original position of the apple\napple_position = get_object_center_position('apple')\nbanana_place_pose = parse_place_pose(object_name='banana', position=apple_position)\nmove_to_pose(banana_place_pose)\n\n# Grasp the apple from the temporary location\napple_grasp_pose = parse_grasp_pose(object_name='apple')\ngrasp(apple_grasp_pose)\nclose_gripper()\nattach_object('apple')\n\n# Move the apple to the original position of the banana\nbanana_position = get_object_center_position('banana')\napple_place_pose = parse_place_pose(object_name='apple', position=banana_position)\nmove_to_pose(apple_place_pose)\n\n# Release the apple and the banana\nopen_gripper()\ndetach_object('apple')\ndetach_object('banana')"
    }
]