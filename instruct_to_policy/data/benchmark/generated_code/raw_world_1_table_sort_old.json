[
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, banana, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  place all fruits on the table into the white plates.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Detect all the fruits on the table\n# Step 2: Grasp each fruit and place it into a white plate\n# Step 3: Release each fruit\n\n# Detect all the fruits on the table\nfruits = ['apple', 'banana']\n\n# Iterate through each fruit\nfor fruit in fruits:\n    # Grasp the fruit\n    open_gripper()\n    grasp_fruit_pose = parse_grasp_pose(object_name=fruit)\n    grasp(grasp_fruit_pose)\n    close_gripper()\n    attach_object(fruit)\n\n    # Move the fruit to a white plate\n    place_plate_pose = parse_place_pose(object_name=fruit, receptacle_name='square_white_plate')\n    move_to_pose(place_plate_pose)\n\n    # Release the fruit\n    open_gripper()\n    detach_object(fruit)",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "rospy",
            "move_group",
            "PoseStamped",
            "Pose",
            "Quaternion",
            "parse_question",
            "get_object_center_position",
            "get_3d_bbox",
            "get_obj_name_list",
            "parse_grasp_pose",
            "parse_place_pose",
            "detect_objects",
            "open_gripper",
            "close_gripper",
            "attach_object",
            "detach_object",
            "move_to_pose",
            "get_gripper_pose",
            "grasp",
            "say",
            "gripper_group",
            "parse_obj_name",
            "transform_shape_pts"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, banana, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  place all fruits on the table into the red red_plastic_bowl.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Grasp the red_plastic_bowl\n# Step 2: Move the red_plastic_bowl to the table\n# Step 3: Release the red_plastic_bowl\n# Step 4: Wait for environment to be static and detect objects new states\n# Step 5: Grasp each fruit on the table\n# Step 6: Move each fruit into the red_plastic_bowl\n# Step 7: Release each fruit\n\n# Grasp the red_plastic_bowl\nopen_gripper()\ngrasp_bowl_pose = parse_grasp_pose(object_name='red_plastic_bowl')\ngrasp(grasp_bowl_pose)\nclose_gripper()\nattach_object('red_plastic_bowl')\n\n# Move the red_plastic_bowl to the table\nplace_bowl_pose = parse_place_pose(object_name='red_plastic_bowl', receptacle_name='table')\nmove_to_pose(place_bowl_pose)\n\n# Release the red_plastic_bowl\nopen_gripper()\ndetach_object('red_plastic_bowl')\n\n# Wait for environment to be static and detect objects new states\nrospy.sleep(5)\ndetect_objects()\n\n# Grasp each fruit on the table\nfruits = ['apple', 'banana']\nfor fruit in fruits:\n    grasp_fruit_pose = parse_grasp_pose(object_name=fruit)\n    grasp(grasp_fruit_pose)\n    close_gripper()\n    attach_object(fruit)\n\n    # Move each fruit into the red_plastic_bowl\n    place_fruit_pose = parse_place_pose(object_name=fruit, receptacle_name='red_plastic_bowl')\n    move_to_pose(place_fruit_pose)\n\n    # Release each fruit\n    open_gripper()\n    detach_object(fruit)\n\n# Wait for environment to be static and detect objects new states\nrospy.sleep(5)\ndetect_objects()",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "rospy",
            "move_group",
            "PoseStamped",
            "Pose",
            "Quaternion",
            "parse_question",
            "get_object_center_position",
            "get_3d_bbox",
            "get_obj_name_list",
            "parse_grasp_pose",
            "parse_place_pose",
            "detect_objects",
            "open_gripper",
            "close_gripper",
            "attach_object",
            "detach_object",
            "move_to_pose",
            "get_gripper_pose",
            "grasp",
            "say",
            "gripper_group",
            "parse_obj_name",
            "transform_shape_pts"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, banana, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, cabinet.drawer0, cabinet.drawer1, cabinet.drawer2] ;  place all boxes into the top cabinet drawer.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Grasp each box one by one\n# Step 2: Move each box to the top cabinet drawer\n# Step 3: Release each box into the top cabinet drawer\n\n# Grasp each box one by one and move it to the top cabinet drawer\nboxes = ['white_and_pink_box', 'brown_box', 'brown_medication_bottle', 'bleach_cleanser', 'mustard_bottle']\ntop_drawer_pose = parse_place_pose(object_name='cabinet.drawer2', receptacle_name='table')\n\nfor box in boxes:\n    # Grasp the box\n    grasp_pose = parse_grasp_pose(object_name=box)\n    grasp(grasp_pose)\n    close_gripper()\n    attach_object(box)\n\n    # Move the box to the top cabinet drawer\n    move_to_pose(top_drawer_pose)\n\n    # Release the box into the top cabinet drawer\n    open_gripper()\n    detach_object(box)\n\n    # Wait for environment to be static and detect objects new states\n    rospy.sleep(5)\n    detect_objects()",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "rospy",
            "move_group",
            "PoseStamped",
            "Pose",
            "Quaternion",
            "parse_question",
            "get_object_center_position",
            "get_3d_bbox",
            "get_obj_name_list",
            "parse_grasp_pose",
            "parse_place_pose",
            "detect_objects",
            "open_gripper",
            "close_gripper",
            "attach_object",
            "detach_object",
            "move_to_pose",
            "get_gripper_pose",
            "grasp",
            "say",
            "gripper_group",
            "parse_obj_name",
            "transform_shape_pts"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, banana, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  stand up lying bottles and mugs on the table.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Stand up the bottles and mugs on the table\n\n# Get the list of objects on the table\nobjects_on_table = get_obj_name_list('table')\n\n# Iterate through the objects on the table\nfor obj in objects_on_table:\n    # Check if the object is a bottle or a mug\n    if 'bottle' in obj or 'mug' in obj:\n        # Stand up the object\n        stand_up_pose = parse_place_pose(object_name=obj, receptacle_name='table')\n        move_to_pose(stand_up_pose)",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "rospy",
            "move_group",
            "PoseStamped",
            "Pose",
            "Quaternion",
            "parse_question",
            "get_object_center_position",
            "get_3d_bbox",
            "get_obj_name_list",
            "parse_grasp_pose",
            "parse_place_pose",
            "detect_objects",
            "open_gripper",
            "close_gripper",
            "attach_object",
            "detach_object",
            "move_to_pose",
            "get_gripper_pose",
            "grasp",
            "say",
            "gripper_group",
            "parse_obj_name",
            "transform_shape_pts"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, banana, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  exchange the position of the apple and the banana on the table.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Grasp the apple on the table\n# Step 2: Move the apple to a temporary location\n# Step 3: Grasp the banana on the table\n# Step 4: Move the banana to the original position of the apple\n# Step 5: Grasp the apple from the temporary location\n# Step 6: Move the apple to the original position of the banana\n# Step 7: Release the apple and the banana\n\n# Grasp the apple on the table\napple_grasp_pose = parse_grasp_pose(object_name='apple')\nopen_gripper()\ngrasp(apple_grasp_pose)\nclose_gripper()\nattach_object('apple')\n\n# Move the apple to a temporary location\ntemp_location_pose = parse_place_pose(object_name='apple', position=[0.5, 0.5, 0.0])\nmove_to_pose(temp_location_pose)\n\n# Grasp the banana on the table\nbanana_grasp_pose = parse_grasp_pose(object_name='banana')\ngrasp(banana_grasp_pose)\nclose_gripper()\nattach_object('banana')\n\n# Move the banana to the original position of the apple\napple_original_pose = parse_place_pose(object_name='apple', position=[0.0, 0.0, 0.0])\nmove_to_pose(apple_original_pose)\n\n# Grasp the apple from the temporary location\napple_grasp_pose = parse_grasp_pose(object_name='apple')\ngrasp(apple_grasp_pose)\nclose_gripper()\nattach_object('apple')\n\n# Move the apple to the original position of the banana\nbanana_original_pose = parse_place_pose(object_name='banana', position=[0.0, 0.0, 0.0])\nmove_to_pose(banana_original_pose)\n\n# Release the apple and the banana\nopen_gripper()\ndetach_object('apple')\ndetach_object('banana')",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "rospy",
            "move_group",
            "PoseStamped",
            "Pose",
            "Quaternion",
            "parse_question",
            "get_object_center_position",
            "get_3d_bbox",
            "get_obj_name_list",
            "parse_grasp_pose",
            "parse_place_pose",
            "detect_objects",
            "open_gripper",
            "close_gripper",
            "attach_object",
            "detach_object",
            "move_to_pose",
            "get_gripper_pose",
            "grasp",
            "say",
            "gripper_group",
            "parse_obj_name",
            "transform_shape_pts"
        ],
        "lvars": []
    }
]